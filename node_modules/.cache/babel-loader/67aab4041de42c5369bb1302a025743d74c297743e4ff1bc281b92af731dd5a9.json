{"ast":null,"code":"var _jsxFileName = \"/home/ashwin/Rhapsody/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useStateValue } from \"./StateProvider\";\nimport Player from \"./Player\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport \"./App.css\";\nimport Login from \"./Login\";\nconst s = new SpotifyWebApi();\nfunction App() {\n  _s();\n  const [{\n    token\n  }, dispatch] = useStateValue();\n  useEffect(() => {\n    // Set token\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n    if (_token) {\n      s.setAccessToken(_token);\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: actiontoken\n      });\n      s.getPlaylist(\"37i9dQZEVXcJZyENOWUFo7\").then(response => dispatch({\n        type: \"SET_DISCOVER_WEEKLY\",\n        discover_weekly: response\n      }));\n      s.getMyTopArtists().then(response => dispatch({\n        type: \"SET_TOP_ARTISTS\",\n        top_artists: response\n      }));\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: s\n      });\n      s.getMe().then(user => {\n        dispatch({\n          type: \"SET_USER\",\n          user: action.user\n        });\n      });\n      s.getUserPlaylists().then(playlists => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: action.playlists\n        });\n      });\n    }\n  }, [token, dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, !token && /*#__PURE__*/React.createElement(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 18\n    }\n  }), token && /*#__PURE__*/React.createElement(Player, {\n    spotify: s,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }));\n}\n_s(App, \"tIPUTfchAl/UKi+CWHLuzsvRV4w=\", false, function () {\n  return [useStateValue];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","SpotifyWebApi","useStateValue","Player","getTokenFromResponse","Login","s","App","token","dispatch","hash","window","location","_token","access_token","setAccessToken","type","actiontoken","getPlaylist","then","response","discover_weekly","getMyTopArtists","top_artists","spotify","getMe","user","action","getUserPlaylists","playlists"],"sources":["/home/ashwin/Rhapsody/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useStateValue } from \"./StateProvider\";\nimport Player from \"./Player\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport \"./App.css\";\nimport Login from \"./Login\";\n\nconst s = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    // Set token\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    if (_token) {\n      s.setAccessToken(_token);\n\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: actiontoken,\n      });\n\n      s.getPlaylist(\"37i9dQZEVXcJZyENOWUFo7\").then((response) =>\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n      );\n\n      s.getMyTopArtists().then((response) =>\n        dispatch({\n          type: \"SET_TOP_ARTISTS\",\n          top_artists: response,\n        })\n      );\n\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: s,\n      });\n\n      s.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user:action.user\n        });\n      });\n\n      s.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists:action.playlists\n        });\n      });\n    }\n  }, [token, dispatch]);\n\n  return (\n    <div className=\"app\">\n      {!token && <Login />}\n      {token && <Player spotify={s} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,oBAAoB,QAAQ,WAAW;AAChD,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,SAAS;AAE3B,MAAMC,CAAC,GAAG,IAAIL,aAAa,EAAE;AAE7B,SAASM,GAAG,GAAG;EAAA;EACb,MAAM,CAAC;IAAEC;EAAM,CAAC,EAAEC,QAAQ,CAAC,GAAGP,aAAa,EAAE;EAE7CF,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,IAAI,GAAGN,oBAAoB,EAAE;IACnCO,MAAM,CAACC,QAAQ,CAACF,IAAI,GAAG,EAAE;IACzB,IAAIG,MAAM,GAAGH,IAAI,CAACI,YAAY;IAE9B,IAAID,MAAM,EAAE;MACVP,CAAC,CAACS,cAAc,CAACF,MAAM,CAAC;MAExBJ,QAAQ,CAAC;QACPO,IAAI,EAAE,WAAW;QACjBR,KAAK,EAAES;MACT,CAAC,CAAC;MAEFX,CAAC,CAACY,WAAW,CAAC,wBAAwB,CAAC,CAACC,IAAI,CAAEC,QAAQ,IACpDX,QAAQ,CAAC;QACPO,IAAI,EAAE,qBAAqB;QAC3BK,eAAe,EAAED;MACnB,CAAC,CAAC,CACH;MAEDd,CAAC,CAACgB,eAAe,EAAE,CAACH,IAAI,CAAEC,QAAQ,IAChCX,QAAQ,CAAC;QACPO,IAAI,EAAE,iBAAiB;QACvBO,WAAW,EAAEH;MACf,CAAC,CAAC,CACH;MAEDX,QAAQ,CAAC;QACPO,IAAI,EAAE,aAAa;QACnBQ,OAAO,EAAElB;MACX,CAAC,CAAC;MAEFA,CAAC,CAACmB,KAAK,EAAE,CAACN,IAAI,CAAEO,IAAI,IAAK;QACvBjB,QAAQ,CAAC;UACPO,IAAI,EAAE,UAAU;UAChBU,IAAI,EAACC,MAAM,CAACD;QACd,CAAC,CAAC;MACJ,CAAC,CAAC;MAEFpB,CAAC,CAACsB,gBAAgB,EAAE,CAACT,IAAI,CAAEU,SAAS,IAAK;QACvCpB,QAAQ,CAAC;UACPO,IAAI,EAAE,eAAe;UACrBa,SAAS,EAACF,MAAM,CAACE;QACnB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACrB,KAAK,EAAEC,QAAQ,CAAC,CAAC;EAErB,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjB,CAACD,KAAK,iBAAI,oBAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACnBA,KAAK,iBAAI,oBAAC,MAAM;IAAC,OAAO,EAAEF,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAC5B;AAEV;AAAC,GA1DQC,GAAG;EAAA,QACoBL,aAAa;AAAA;AAAA,KADpCK,GAAG;AA4DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}